1. Gigel si criptomonedele
	Am folosit algoritmul Greedy, acesta oferind o solutie rapida si
corecta. Primul pas a fost sa sortez elementele, dupa care sa aud suma de
upgrade a calculatoarelor de acelasi nivel si le-am facut upgrade pana la
nivelul primului calculator neselectat.
	Complexitatea algoritmului este O(nlogn). Aceasta este data de sortarea
vectorului, deoarece complexitatea algoritmului care rezolva problema este O(n)
fiind data de un for care poate sa parcurga tot vectorul.

2. Gigel investeste la bursa
	Am folosit programare dinamica, problema fiind asemanatoare cu problema
rucsacului, avand o conditie in plus. 
	Complexitatea este data de determinarea vectorului de solutii si este
O(n*L*B)(n-nr de actiuni, L-suma pe care Gigel este dispus sa o piarda, B-suma
pe care o detine Gigel).

3. Gigel merge la munte
	Pentru aceasta problema am folosit programare dinamica. Parcurg 
vectorul de munti si pentru fiecare munte calculez costul de nivelare din 
stanga si respectiv din dreapta sa.
	Complexitatea este O(n), fiind data de parcurgerea vectorului de 
munti si a vectorului de solutii pentru aflarea minimului.

4. Gigel si creasta montana
	Am folosit programare dinamica pentru a calcula toate posibilitatile
de modificare ale muntilor, astfel incat cei adiacenti sa fie diferiti.
	Complexitatea este data de determinarea vectorului de solutii si este
O(n*3) = O(n).
